name: Interactive Mac Environment
on: workflow_dispatch

jobs:
  interactive-mac:
    runs-on: macos-latest
    steps:
      - name: Check macOS version and architecture
        run: |
          sw_vers
          uname -m

      - name: Setup Screen Sharing (Built-in VNC)
        run: |
          # macOS内蔵のScreen Sharingを使用
          # VNCパスワードを設定
          sudo dscl . -passwd /Users/runner "${{ secrets.VNC_PASSWORD }}"

          # Screen Sharing (VNC) を有効化
          sudo defaults write /var/db/launchd.db/com.apple.launchd/overrides.plist com.apple.screensharing -dict Disabled -bool false

          # VNCサービスを開始
          sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist || true

          # VNC設定
          sudo defaults write /Library/Preferences/com.apple.RemoteManagement.plist VNCLegacyConnectionsEnabled -bool true

      - name: Alternative - Use OSXvnc
        run: |
          # 代替案：OSXvncを使用
          brew install --cask osxvnc

          # OSXvncを起動（ポート5900）
          /Applications/OSXvnc.app/Contents/MacOS/OSXvnc-server \
            -rfbport 5900 \
            -rfbauth ~/.vnc/passwd \
            -desktop "GitHub Actions Mac" &

      - name: Setup ngrok
        run: |
          # ngrokのインストール
          brew install ngrok

          # ngrok認証
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

          # VNCポート（5900）をトンネリング
          ngrok tcp 5900 > /tmp/ngrok.log 2>&1 &

          # 少し待つ
          sleep 10

          # 接続情報を取得
          echo "Getting tunnel URL..."
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' || echo "Failed to get URL"

      - name: Setup Development Environment
        run: |
          # Xcodeバージョン確認
          xcode-select -p
          xcodebuild -version

          # 利用可能なシミュレータ一覧
          xcrun simctl list devices

      - name: Display Connection Info
        run: |
          echo "=========================================="
          echo "VNC Server Setup Complete!"
          echo "Connection URL:"
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' || echo "Check ngrok dashboard"
          echo "Username: runner"
          echo "Password: (your VNC_PASSWORD secret)"
          echo "=========================================="

      - name: Keep Alive with Status Updates
        run: |
          # 開始時刻を記録
          START_TIME=$(date +%s)
          MAX_DURATION=$((6 * 60 * 60))  # 6時間

          while true; do
            CURRENT_TIME=$(date +%s)
            ELAPSED=$((CURRENT_TIME - START_TIME))
            REMAINING=$((MAX_DURATION - ELAPSED))
            
            echo "Status Update: $(date)"
            echo "Elapsed: $((ELAPSED / 60)) minutes"
            echo "Remaining: $((REMAINING / 60)) minutes"
            
            # ngrok状態確認
            if curl -s http://localhost:4040/api/tunnels > /dev/null 2>&1; then
              echo "VNC URL: $(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')"
            else
              echo "Warning: ngrok might have stopped"
            fi
            
            # 5分待機
            sleep 300
          done
