# Reverse MacOS VNC for GitHub Actions
# This YAML establishes the "build" workflow where we will execute all required scripts
# During the process, it should get stuck at the last step where it creates a new tunnel on ngrok.

name: macOS
on: [push]
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Preparing environment...
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}
      # legacy run command script-- run: ./scripts/configure-legacy.sh
      run: |
        # Install ngrok
        brew install ngrok/ngrok/ngrok
        # Authenticate ngrok
        ngrok config add-authtoken $NGROK_AUTH_TOKEN
    - name: Install Remote Access Tools
      run: |
        # Install noVNC for web-based access
        git clone https://github.com/novnc/noVNC.git ~/noVNC
        git clone https://github.com/novnc/websockify.git ~/websockify
        # Install Python dependencies
        pip3 install websockify
    - name: Setup Terminal Web Interface
      run: |
        # Install ttyd for web-based terminal access
        brew install ttyd
        # Create a simple web interface
        mkdir -p ~/web-interface
    - name: Starting Web Terminal...
      env:
        VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}
      run: |
        # Start web-based terminal interface
        ttyd -p 7681 -W bash &
        sleep 2
        echo "Web terminal started on port 7681"
        # Create a simple status page
        cat > ~/web-interface/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head><title>macOS GitHub Actions</title></head>
        <body>
        <h1>macOS GitHub Actions Remote Access</h1>
        <p>Terminal access available</p>
        <p>System: $(uname -a)</p>
        <p>Time: $(date)</p>
        </body>
        </html>
        EOF
        # Start simple web server for status
        python3 -m http.server 8080 -d ~/web-interface &
    - name: Creating tunnel with ngrok...
      run: |
        # Start ngrok HTTP tunnel for web terminal (free tier supports HTTP)
        ngrok http 7681 --log stdout &
        sleep 10
        # Show connection info
        echo "=== macOS Remote Access Information ==="
        echo "Terminal URL:"
        curl -s http://localhost:4040/api/tunnels | grep -o '"public_url":"[^"]*"' | cut -d'"' -f4
        echo ""
        echo "System Information:"
        uname -a
        echo "Current User: $(whoami)"
        echo "Home Directory: $HOME"
        echo "Available Tools: $(which brew git python3 node)"
        # Keep the workflow running
        while true; do sleep 30; done