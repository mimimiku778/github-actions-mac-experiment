name: Interactive Mac Environment
on: workflow_dispatch

jobs:
  interactive-mac:
    runs-on: macos-latest
    steps:
      - name: System Info
        run: |
          echo "=== System Information ==="
          sw_vers
          whoami
          id
          echo "=== Network Info ==="
          ifconfig | grep inet

      - name: Install and Setup VNC (Alternative Method)
        run: |
          # RealVNCサーバーをインストール
          brew install --cask vnc-server

          # または、TightVNCを試す
          brew install --cask tigervnc-viewer

      - name: Setup noVNC (Web-based VNC)
        run: |
          # noVNCをセットアップ（ブラウザからアクセス可能）
          git clone https://github.com/novnc/noVNC.git
          cd noVNC

          # WebSocketプロキシを起動
          ./utils/novnc_proxy --vnc localhost:5900 --listen 6080 &

      - name: Create Virtual Display
        run: |
          # 仮想ディスプレイを作成（ヘッドレス環境用）
          brew install xquartz

          # Xvfbを使って仮想ディスプレイ作成
          Xvfb :99 -screen 0 1024x768x24 &
          export DISPLAY=:99

      - name: Setup x11vnc
        run: |
          # x11vncをインストール（X11用VNCサーバー）
          brew install x11vnc

          # パスワードファイルを作成
          x11vnc -storepasswd "${{ secrets.VNC_PASSWORD }}" ~/.vnc/passwd

          # x11vncを起動
          x11vnc -display :99 -forever -shared -rfbauth ~/.vnc/passwd -rfbport 5900 &

      - name: Setup ngrok
        run: |
          # ngrokインストール
          brew install ngrok

          # 認証
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

          # HTTPトンネル（noVNC用）
          ngrok http 6080 > /tmp/ngrok-http.log 2>&1 &

          # TCPトンネル（直接VNC用）  
          ngrok tcp 5900 > /tmp/ngrok-tcp.log 2>&1 &

          sleep 10

      - name: Display Access Info
        run: |
          echo "=========================================="
          echo "Access Information:"
          echo "------------------------------------------"
          echo "1. Web VNC (noVNC):"
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[] | select(.proto=="https") | .public_url' || echo "Waiting for HTTP tunnel..."
          echo ""
          echo "2. Direct VNC:"
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[] | select(.proto=="tcp") | .public_url' || echo "Waiting for TCP tunnel..."
          echo ""
          echo "Password: (your VNC_PASSWORD)"
          echo "=========================================="

      - name: Alternative - Use Chrome Remote Desktop
        run: |
          # Chrome Remote Desktopのヘッドレス版をセットアップ
          # これは概念的なコードです
          echo "Chrome Remote Desktop setup would go here..."

      - name: Keep Alive
        run: |
          # プロセス監視しながら維持
          while true; do
            echo "=== Status Check: $(date) ==="
            
            # VNCプロセス確認
            ps aux | grep -E "(vnc|x11vnc)" | grep -v grep || echo "VNC process not found!"
            
            # ngrok状態
            echo "Active tunnels:"
            curl -s http://localhost:4040/api/tunnels 2>/dev/null | jq -r '.tunnels[] | "\(.proto): \(.public_url)"' || echo "ngrok not responding"
            
            # 5分待機
            sleep 300
          done
