name: Interactive Mac Environment
on: workflow_dispatch

jobs:
  interactive-mac:
    runs-on: macos-latest
    steps:
      - name: Setup VNC Server
        run: |
          # VNCサーバーのセットアップ
          brew install tiger-vnc
          
          # VNCパスワードの設定（環境変数から）
          mkdir -p ~/.vnc
          echo "${{ secrets.VNC_PASSWORD }}" | vncpasswd -f > ~/.vnc/passwd
          chmod 600 ~/.vnc/passwd
          
          # VNCサーバー起動（ディスプレイ:1、解像度1920x1080）
          vncserver :1 -geometry 1920x1080 -depth 24
          
      - name: Setup ngrok
        run: |
          # ngrokのインストール
          brew install --cask ngrok
          
          # ngrok認証（GitHub Secretsに保存）
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          
          # VNCポート（5901）をトンネリング
          ngrok tcp 5901 &
          
          # 接続情報を取得して表示
          sleep 5
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'
          
      - name: Setup Environment
        run: |
          # 開発環境のセットアップ
          echo "Setting up development environment..."
          
          # Xcodeのバージョン確認
          xcodebuild -version
          
          # シミュレータ起動（例：iPhone 15）
          xcrun simctl boot "iPhone 15" || true
          open -a Simulator
          
      - name: Display Connection Info
        run: |
          echo "=========================================="
          echo "VNC Server is running!"
          echo "Connection info:"
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'
          echo "Use any VNC client to connect"
          echo "=========================================="
          
      - name: Keep Alive
        run: |
          # 接続情報を定期的に表示
          while true; do
            echo "Still running... $(date)"
            echo "VNC URL:"
            curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' || true
            sleep 300  # 5分ごと
          done